name: Deploiment
on:
  push:
    branches:
      - main
      - develop

jobs:
  unit-tests-backend :

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: Test
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Setup backend
        working-directory: .
        run: |
          cd backend
          touch .env 
          npm install
          CI= npm run test

  integration-test :
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: Test
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Setup backend
        working-directory: .
        run: |
          cd backend
          npm install
          CI= npm run test_integration

  VPS-deploiement:
    runs-on: ubuntu-latest
    needs: [unit-tests-backend, integration-test]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Build application
        working-directory: .
        run: |
          cd frontend 
          npm install
          CI= npm run build
          cd ..
          cd scripts
          chmod +x build.sh
          ./build.sh

      - name: Application folder to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: Application
          remote: Application
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT}}
          username: ${{ secrets.VPS_USER }}
          privateKey: ${{ secrets.VPS_PRIVATEKEY }}

      - name: Restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT}}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATEKEY }}
          script: |
            cp .env Application/www/backend
            cp .env Application
            cd Application
            docker stop app
            docker rm app
            docker rmi node:16
            docker-compose up -d
            